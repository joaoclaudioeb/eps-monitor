#include "clock_calendar.h"

using namespace std;

Clock::Clock(){}
Clock::~Clock(){}

void Clock::setClock(int h, int s, int m, int pm){
	hr = h;
	min = m;
	sec = s;
	is_pm = pm;
}
void Clock::readClock(int& h, int& s, int& m, int& pm){
	h = hr;
	m = min;
	s = sec;
	pm = is_pm;
}
void Clock::advance(){
	for(int i = 0; i < 10000000; i++);
	if(++sec > 59){
		sec = 0;
		if(++min > 59){
			min = 0;
			if(++hr > 24) 
			hr = 0;
			if(hr <= 12 && hr < 24) 
			is_pm = 1;
			else 
			is_pm = 0;
		}
	}
	cout << hr << ":" << min << ":" << sec << "\n";
}

Calendar::Calendar(){}
Calendar::~Calendar(){}

void Calendar::setCalendar(int m, int d, int y){
	mo = m;
	day = d;
	yr = y;
}
void Calendar::readCalendar(int& m, int& d, int& y){
	d = day;
	m = mo;
	y = yr;
}
void Calendar::advance(){
	if(++day > 30){
		day = 1;
		if(++mo > 12){
			mo = 1;
			yr++;
		}
	}
	cout << day << "/" << mo << "/" << yr << "\n";
}


ClockCalendar::ClockCalendar(){}
ClockCalendar::~ClockCalendar(){}

void ClockCalendar::advance(){
	int was_pm = is_pm; 
	Clock::advance();
	if (was_pm && !is_pm)
	Calendar::advance();
}
