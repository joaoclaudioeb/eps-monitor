#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <iomanip>

// Function to convert timestamp to time_t
std::time_t convertToTime(const std::string& timestamp) {
    std::tm tm = {};
    std::istringstream ss(timestamp);
    ss >> std::get_time(&tm, "%d/%m/%Y %H:%M:%S");
    return std::mktime(&tm);
}

int main() {
    std::ifstream file("serial_log.txt");

    if (file.is_open()) {
        std::string line;
        std::vector<std::string> lines;

        // Read lines and store them in a vector
        while (std::getline(file, line)) {
            lines.push_back(line);
        }

        if (!lines.empty()) {
            std::string firstTimestamp = lines.front().substr(4, 19); // Extract timestamp
            std::string lastTimestamp = lines.back().substr(4, 19);   // Extract timestamp
            std::cout << firstTimestamp << "\n";
std::cout << lastTimestamp << "\n";
            // Convert timestamps to time_t

            std::time_t firstTime = convertToTime(firstTimestamp);
            std::time_t lastTime = convertToTime(lastTimestamp);

            // Calculate elapsed time in seconds
            double elapsedTime = std::difftime(lastTime, firstTime);

            std::cout << "Elapsed time between first and last log: " << elapsedTime << " seconds" << std::endl;
        } else {
            std::cerr << "File is empty!" << std::endl;
        }

        lines.clear(); // Clear the vector for the next read
        file.close();
    } else {
        std::cerr << "Unable to open file!" << std::endl;
    }

    return 0;
}

